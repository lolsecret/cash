# Generated by Django 4.2.10 on 2024-11-26 11:02

import apps.credits.models.application
import apps.credits.models.people
import apps.people.validators
from decimal import Decimal
import django.contrib.postgres.fields
import django.contrib.postgres.fields.ranges
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import django_fsm
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationFaceMatchPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('borrower_photo', models.ImageField(blank=True, null=True, upload_to=apps.credits.models.application.borrower_photo_path, verbose_name='Файл с изображением фото заемщика')),
                ('document_file', models.FileField(blank=True, null=True, upload_to=apps.credits.models.application.document_photo_path, verbose_name='Файл с pdf документа')),
                ('document_photo', models.ImageField(blank=True, null=True, upload_to=apps.credits.models.application.document_photo_path, verbose_name='Файл с изображением документа')),
                ('similarity', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='коэффициент сходства')),
                ('attempts', models.PositiveSmallIntegerField(default=0)),
                ('vendor', models.CharField(max_length=255, null=True, verbose_name='Вендор')),
                ('query_id', models.CharField(max_length=255, null=True, verbose_name='Query ID')),
            ],
            options={
                'verbose_name': 'Изображение для биометрии',
                'verbose_name_plural': 'Изображение для биометрии',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BusinessInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование ИП')),
                ('branch', models.CharField(max_length=255, verbose_name='Отрасль')),
                ('place', models.CharField(max_length=255, verbose_name='Место бизнеса')),
                ('working_since', models.PositiveSmallIntegerField(null=True, verbose_name='Время работы ИП')),
                ('website_social', models.CharField(max_length=255, verbose_name='Веб сайт/соц. сети')),
                ('description', models.TextField(null=True, verbose_name='Описание бизнеса')),
                ('expert_opinion', models.TextField(null=True, verbose_name='Заключение кредитного эксперта')),
                ('funding_plan', models.TextField(null=True, verbose_name='План финансирования')),
            ],
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False, verbose_name='Уникальный код')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Канал продаж',
                'verbose_name_plural': 'Настройки: Каналы продаж',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('content', models.TextField(verbose_name='Содержимое')),
            ],
            options={
                'verbose_name': 'Коммент',
                'verbose_name_plural': 'Комментарии',
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='CreditApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('way_type', models.CharField(blank=True, choices=[('OFFLINE', 'Оффлайн'), ('ONLINE', 'Онлайн')], max_length=20, null=True, verbose_name='Путь заявки Онлайн/Оффлайн')),
                ('status', django_fsm.FSMField(choices=[('NEW', 'Новая'), ('IN_PROGRESS', 'В процессе'), ('IN_WORK', 'В работе'), ('IN_WORK_CREDIT_ADMIN', 'В работе (кред.админ)'), ('TO_SIGNING', 'На подписании'), ('GUARANTOR_SIGNING', 'На подписании гаранта'), ('FIN_ANALYSIS', 'Фин Анализ'), ('DECISION', 'На рассмотрении'), ('DECISION_CHAIRPERSON', 'Ожидает решение (председатель)'), ('FILLING', 'На доработке'), ('VISIT', 'Выезд'), ('CALLBACK', 'Перезвонить'), ('APPROVED', 'Одобрен'), ('REJECTED', 'Отказ'), ('CANCEL', 'Отмена'), ('ISSUANCE', 'Выдача'), ('ISSUED', 'Выдан')], default='NEW', max_length=50, protected=True)),
                ('status_reason', models.CharField(blank=True, max_length=255, null=True, verbose_name='Причина присвоения статуса')),
                ('verified', models.BooleanField(default=False, verbose_name='Подтверждена OTP кодом')),
                ('otp_signature', models.CharField(blank=True, max_length=12, null=True, verbose_name='OTP код, использованный для подписи контракта')),
                ('signed_at', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
            options={
                'verbose_name': 'Кредитная заявка',
                'verbose_name_plural': '2. Кредитные заявки',
                'ordering': ('-created',),
                'permissions': (('can_reject', 'Может отменить'), ('can_import', 'Может импортировать'), ('can_export', 'Может экспортировать'), ('can_distribute', 'Перераспределение между кредитными менеджерами'), ('can_use_filter', 'Может использовать фильтр'), ('can_use_sort', 'Может использовать сортировку'), ('can_credit_report_request', 'Может запросить кредитный отчет'), ('can_return_for_revision', 'Может вернуть на доработку')),
            },
        ),
        migrations.CreateModel(
            name='CreditApplicationPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.CharField(choices=[('NOT_PAID', 'Не Оплачено'), ('PAID', 'Оплачено'), ('CANCELED', 'Отменен при оплате'), ('PAYMENT_ERROR', 'Ошибка оплаты')], default='NOT_PAID', max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Сумма')),
                ('_pay_link', models.CharField(max_length=250, null=True)),
                ('order_id', models.CharField(db_index=True, max_length=21, null=True, unique=True)),
                ('hash', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('contract_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Номер контракта из 1С')),
                ('contract_date', models.DateField(blank=True, null=True, verbose_name='Номер контракта из 1С')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
            },
        ),
        migrations.CreateModel(
            name='CreditContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('signed_user_object_id', models.PositiveIntegerField(null=True)),
                ('contract_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер договора')),
                ('contract_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата контракта')),
                ('contract_status', models.CharField(blank=True, choices=[('CREATED', 'Создан'), ('ISSUED', 'Выдан'), ('REPAY', 'Погашается'), ('RESTRUCTURED', 'Реструктурирован'), ('DEBITED', 'Списан'), ('SCHEDULED_FOR_EARLY', 'Запланирован на досрочное погашение'), ('REPAID_EARLY', 'Досрочно погашен'), ('TRANSFERRED_TO_COURT', 'Передан в суд'), ('EXPIRED', 'Просрочен'), ('REPAID', 'Погашен')], default='CREATED', max_length=50, null=True, verbose_name='Статус контракта')),
                ('reward', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Вознограждение')),
                ('payments', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), default=list, size=None, verbose_name='Платежи')),
                ('remaining_principal', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Сумма кредита')),
                ('overdue_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Просроченная задолженость')),
                ('penalty_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Сумма пени')),
                ('overdue_days', models.IntegerField(default=0, verbose_name='Количество просроченных дней')),
                ('signed_at', models.DateField(verbose_name='Дата подписания')),
                ('closed_at', models.DateField(blank=True, null=True, verbose_name='Дата закрытия')),
                ('otp_signature', models.CharField(blank=True, max_length=12, null=True, verbose_name='OTP код, использованный для подписи контракта')),
            ],
            options={
                'verbose_name': 'Кредитный контракт',
                'verbose_name_plural': '3. Кредитные контракты',
                'ordering': ('-signed_at',),
            },
        ),
        migrations.CreateModel(
            name='CreditDecision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
            ],
            options={
                'verbose_name': 'Решение по кредиту',
                'verbose_name_plural': 'Настройки: Решения по кредиту',
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='CreditDecisionVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.CharField(choices=[('FOR', 'За'), ('AGAINST', 'Против')], max_length=100, verbose_name='Решение')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
            ],
        ),
        migrations.CreateModel(
            name='CreditDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to=apps.credits.models.application.upload_credit_documents)),
                ('image', models.ImageField(upload_to=apps.credits.models.application.upload_credit_images)),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Электронное досье',
            },
        ),
        migrations.CreateModel(
            name='CreditFinance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('financial_info_period', models.DateField(blank=True, null=True, verbose_name='Текущий период')),
                ('formation_time', models.TimeField(blank=True, null=True, verbose_name='Время формирования кассы')),
                ('cash_box', models.PositiveIntegerField(default=0, verbose_name='Касса')),
                ('avg_daily_revenue', models.PositiveIntegerField(default=0, verbose_name='Среднесуточный размер выручки')),
                ('economy', models.PositiveIntegerField(default=0, verbose_name='Сбережения')),
                ('tmz', models.PositiveIntegerField(default=0, verbose_name='ТМЗ')),
                ('receivable', models.PositiveIntegerField(default=0, verbose_name='Дебиторская задолженность')),
                ('total_working_capital', models.PositiveIntegerField(default=0, verbose_name='Всего оборотных средств')),
                ('equipment', models.PositiveIntegerField(default=0, verbose_name='Оборудование')),
                ('transport', models.PositiveIntegerField(default=0, verbose_name='Транспорт')),
                ('real_property', models.PositiveIntegerField(default=0, verbose_name='Недвижимость')),
                ('total_fixed_assets', models.PositiveIntegerField(default=0, verbose_name='Всего основных средств')),
                ('other_current_assets', models.PositiveIntegerField(default=0, verbose_name='Прочие оборотные активы')),
                ('active_currency_rate', models.PositiveIntegerField(default=0, verbose_name='Валюта баланса (Актив)')),
                ('credit_debt', models.PositiveIntegerField(default=0, verbose_name='Кредитная задолженность (долги за товар и прочее)')),
                ('credit_debt_current', models.PositiveIntegerField(default=0, verbose_name='Задолженность по текущим кредитам')),
                ('credit_debt_total', models.PositiveIntegerField(default=0, verbose_name='Всего кредитная задолженность')),
                ('equity', models.IntegerField(default=0, verbose_name='Собственный капитал')),
                ('passive_currency_rate', models.PositiveIntegerField(default=0, verbose_name='Валюта баланса (Пассив)')),
                ('profit_report_filled_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата заполнения ОПиУ')),
                ('profit_report_duration', models.DurationField(blank=True, null=True, verbose_name='ОПиУ')),
                ('begin_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата конца периода')),
                ('finance_report', models.JSONField(blank=True, null=True, verbose_name='Отчет о прибылях и убытках')),
                ('report_comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Финансовые данные',
                'verbose_name_plural': 'Финансовые данные',
            },
        ),
        migrations.CreateModel(
            name='CreditHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('CURRENT', 'Действующий'), ('TERMINATED', 'Завершенный')], max_length=50, verbose_name='Статус контракта')),
                ('financial_institution', models.CharField(max_length=255, null=True, verbose_name='Кредитор')),
                ('guarantee_type', models.CharField(max_length=255, null=True, verbose_name='Вид обеспечения')),
                ('subject_role_code', models.CharField(max_length=150, verbose_name='Роль код')),
                ('subject_role', models.CharField(max_length=150, verbose_name='Роль')),
                ('agreement_number', models.CharField(max_length=100, null=True, verbose_name='Номер договора')),
                ('start_date', models.DateField(verbose_name='Дата начала срока действия договора')),
                ('end_date', models.DateField(verbose_name='Дата окончания срока действия договора')),
                ('actual_end_date', models.DateField(null=True, verbose_name='Дата фактического завершения')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15, null=True, verbose_name='Общая сумма договора')),
                ('outstanding_amount', models.DecimalField(decimal_places=2, max_digits=15, null=True, verbose_name='Непогашенная сумма по кредиту')),
                ('monthly_payment', models.DecimalField(decimal_places=2, max_digits=15, null=True, verbose_name='Сумма периодического платежа')),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=15, null=True, verbose_name='Процентная ставка')),
                ('number_of_installments', models.IntegerField(null=True, verbose_name='Общее количество платежей')),
                ('number_of_outstanding_installments', models.IntegerField(null=True, verbose_name='Кол-во непогашенных(предстоящих) платежей')),
                ('overdue_days', models.IntegerField(null=True, verbose_name='Количество дней просрочки')),
                ('overdue_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, null=True, verbose_name='Сумма просроченных взносов')),
            ],
            options={
                'verbose_name': 'Кредитная история(Контракта)',
                'verbose_name_plural': 'Кредитная история(Контракты)',
            },
        ),
        migrations.CreateModel(
            name='CreditParams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('principal', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Сумма кредита')),
                ('interest_rate', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Номинальная процентная ставка')),
                ('period', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Срок кредита')),
                ('repayment_method', models.CharField(choices=[('ANNUITY', 'Аннуитетный'), ('EQUAL_INSTALMENTS', 'Равными долями')], default='ANNUITY', max_length=20, verbose_name='Метод погашения')),
                ('desired_repayment_day', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(28)], verbose_name='Желаемый день погашения')),
                ('contract_date', models.DateField(auto_now_add=True, null=True, verbose_name='Дата заключения договора')),
                ('aeir', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'verbose_name': 'Параметры кредита',
                'verbose_name_plural': 'Параметры кредитов',
            },
        ),
        migrations.CreateModel(
            name='CreditReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('current_loan_payments', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=16, verbose_name='Наличие действующих кредитов в 1C')),
                ('soho_id_query', models.IntegerField(blank=True, null=True, verbose_name='ID запроса по Soho скорингу')),
                ('soho_score', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Скор-балл по Soho скорингу')),
                ('behavior_id_query', models.IntegerField(blank=True, null=True, verbose_name='ID запроса по поведенческому скорингу')),
                ('behavior_score', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Скор-балл по поведенческому скорингу')),
                ('behavior_default_prob', models.CharField(blank=True, max_length=100, null=True, verbose_name='Вероятность дефолта в течение 12 месяцев')),
                ('behavior_risk_grade', models.CharField(blank=True, max_length=20, null=True, verbose_name='Категория риска')),
                ('behavior_bad_rate', models.CharField(blank=True, max_length=255, null=True, verbose_name='')),
                ('behavior_cause', models.TextField(blank=True, null=True, verbose_name='Объяснение низкого скор-балла или его отсутствия')),
                ('custom_scoring_flags', models.JSONField(blank=True, null=True, verbose_name='ПКБ Custom Scoring flags')),
                ('telco_score', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Скор-балл по Telco скорингу')),
                ('pkb_query_last_30', models.PositiveIntegerField(null=True)),
                ('pkb_query_last_90', models.PositiveIntegerField(null=True)),
                ('pkb_query_last_120', models.PositiveIntegerField(null=True)),
                ('pkb_query_last_180', models.PositiveIntegerField(null=True)),
                ('pkb_query_last_360', models.PositiveIntegerField(null=True)),
                ('pkb_credit_report', models.FileField(blank=True, null=True, upload_to=apps.credits.models.people.upload_pkb_file, verbose_name='Кредитный отчет ПКБ')),
            ],
            options={
                'verbose_name': 'Кредитное досье',
                'verbose_name_plural': 'Кредитные досье',
            },
        ),
        migrations.CreateModel(
            name='DocumentGroup',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False, unique=True, verbose_name='Код группы')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Порядок')),
                ('show_label', models.BooleanField(default=True, verbose_name='Показывать названия')),
            ],
            options={
                'verbose_name': 'Группа документов',
                'verbose_name_plural': 'Группы документов',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, verbose_name='Код документа')),
                ('name', models.CharField(max_length=255, verbose_name='Название типа документа')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Порядок')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Тип документа',
                'verbose_name_plural': 'Типы документов',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='EmailNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.CharField(choices=[('NEW', 'Новая'), ('IN_PROGRESS', 'В процессе'), ('IN_WORK', 'В работе'), ('IN_WORK_CREDIT_ADMIN', 'В работе (кред.админ)'), ('TO_SIGNING', 'На подписании'), ('GUARANTOR_SIGNING', 'На подписании гаранта'), ('FIN_ANALYSIS', 'Фин Анализ'), ('DECISION', 'На рассмотрении'), ('DECISION_CHAIRPERSON', 'Ожидает решение (председатель)'), ('FILLING', 'На доработке'), ('VISIT', 'Выезд'), ('CALLBACK', 'Перезвонить'), ('APPROVED', 'Одобрен'), ('REJECTED', 'Отказ'), ('CANCEL', 'Отмена'), ('ISSUANCE', 'Выдача'), ('ISSUED', 'Выдан')], max_length=50, verbose_name='Статус')),
                ('subject', models.CharField(max_length=255, verbose_name='Тема')),
                ('text', models.TextField(verbose_name='Текст')),
                ('role', models.CharField(choices=[('CREDIT_ADMIN_SUPERVISOR', 'Супервайзер кредитных администраторов'), ('CREDIT_ADMIN', 'Кредитный администратор'), ('CREDIT_MANAGER', 'Кредитный менеджер'), ('CREDIT_COMMITTEE_CHAIRMAN', 'Председатель КК'), ('CREDIT_COMMITTEE_MEMBER', 'Член КК'), ('ADMIN', 'Администратор'), ('ACCOUNTANT', 'Бухгалтер'), ('RISK_MANAGER', 'Риск менеджер'), ('DIRECTOR', 'Директор'), ('AUDITOR', 'Аудитор'), ('FINANCE_CONTROLLER', 'Финансовый контролер')], max_length=30, verbose_name='Роль')),
            ],
            options={
                'verbose_name': 'Email уведомление',
                'verbose_name_plural': 'Email уведомление',
            },
        ),
        migrations.CreateModel(
            name='FinanceReportType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('const_name', models.CharField(max_length=200, unique=True, verbose_name='Константное название')),
                ('is_expense', models.BooleanField(default=False, verbose_name='Это убыток')),
                ('calculated', models.BooleanField(default=False, verbose_name='Рассчитанный')),
                ('position', models.IntegerField(default=1, verbose_name='Позиция')),
            ],
            options={
                'verbose_name': 'Отчет о прибылях и убытка',
                'verbose_name_plural': 'Отчеты о прибылях и убытка',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='FinancingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Вид финансирования',
                'verbose_name_plural': 'Настройки: Вид финансирования',
            },
        ),
        migrations.CreateModel(
            name='FundingPurpose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Цель финансирования',
                'verbose_name_plural': 'Настройки: Цель финансирования',
            },
        ),
        migrations.CreateModel(
            name='Guarantor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp_signature', models.CharField(blank=True, max_length=12, null=True, verbose_name='OTP код, использованный для подписи контракта')),
                ('signed_at', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
            options={
                'verbose_name': 'Гарант',
                'verbose_name_plural': 'Гаранты',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='IncomeReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата поступления')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Сумма')),
                ('company_name', models.CharField(max_length=255, verbose_name='Наименование организации')),
                ('company_bin', models.CharField(max_length=12, validators=[apps.people.validators.IinValidator], verbose_name='БИН организации')),
            ],
            options={
                'verbose_name': 'Поступление доходов',
                'verbose_name_plural': 'Поступления доходов',
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Идентификатор')),
                ('borrower_iin', models.CharField(max_length=12, null=True, verbose_name='ИИН')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество')),
                ('mobile_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Mobile phone')),
                ('current_loan_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Сумма действующего займа')),
                ('rejected', models.BooleanField(default=False, verbose_name='Отклонена конвейером')),
                ('reject_reason', models.CharField(blank=True, max_length=255, null=True, verbose_name='Причина отклонения')),
                ('is_done', models.BooleanField(default=False, verbose_name='Выполено')),
                ('cpa_transaction_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='transaction id в CPA цети')),
                ('utm_source', models.CharField(blank=True, max_length=255, null=True, verbose_name='UTM метка')),
                ('utm_params', models.JSONField(blank=True, null=True, verbose_name='utm params')),
            ],
            options={
                'verbose_name': 'Лид',
                'verbose_name_plural': '1. Лиды',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='NegativeStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_id', models.CharField(max_length=10, null=True, verbose_name='Статус id')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('registration_date', models.DateField(null=True, verbose_name='Дата регистации')),
                ('role', models.CharField(max_length=150, null=True, verbose_name='Название роли')),
                ('role_code', models.CharField(max_length=150, null=True, verbose_name='Код роли')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False, verbose_name='Уникальный код')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('bonus_days', models.PositiveIntegerField(default=15, verbose_name='Бонусные дни (без процентов)')),
                ('contract_code', models.CharField(max_length=2, null=True, verbose_name='Код в номере контракта')),
                ('interest_rate', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, verbose_name='Годовая процентная ставка')),
                ('principal_limits', django.contrib.postgres.fields.ranges.DecimalRangeField(default='[200000, 3000000]', verbose_name='Ограничения по сумме')),
                ('period', models.PositiveIntegerField(default='20', verbose_name='Срок')),
                ('max_loan_amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='Максимальная сумма кредита')),
                ('minimum_income', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Минимальная сумма дохода')),
                ('maximum_loan_amount_with_minimum_income', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Максимальная сумма кредита при минимальном доходе')),
                ('age_limits_male', django.contrib.postgres.fields.ranges.IntegerRangeField(blank=True, null=True, verbose_name='Ограничения по возрасту для мужчин')),
                ('age_limits_female', django.contrib.postgres.fields.ranges.IntegerRangeField(blank=True, null=True, verbose_name='Ограничения по возрасту для женщин')),
                ('age_limits_active', models.BooleanField(default=True, verbose_name='Ограничения по возрасту активны')),
                ('max_debt_ratio', models.DecimalField(decimal_places=2, default=Decimal('0.5'), max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('1'))], verbose_name='Максимальный коэффициент долговой нагрузки (КДН)')),
                ('finance_report_month_count', models.PositiveSmallIntegerField(default=6, verbose_name='Период фин.анализа')),
                ('pkb_soho_min_score', models.PositiveSmallIntegerField(default=0, verbose_name='Минимальный балл по Soho Score')),
                ('pkb_behavioral_min_score', models.PositiveIntegerField(default=0, verbose_name='Минимальный балл по поведенческому скорингу')),
                ('pkb_behavioral_allow_blank', models.BooleanField(default=False, verbose_name='Пропускать заёмщиков без балла по поведенческому скорингу')),
                ('reduction_factor', models.DecimalField(decimal_places=2, default=Decimal('0.5'), max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('1'))], verbose_name='Понижающий коэффициент')),
                ('gkb_incomes_enable', models.BooleanField(default=False, verbose_name='Активировать проверку по доходам')),
                ('gkb_incomes_min_income_for_check', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Минимальная сумма займа для проверки по доходам')),
                ('gkb_incomes_min_last_month', models.PositiveSmallIntegerField(default=0, verbose_name='Наличие не менее одного платежа за последних месяцев')),
                ('accounting_prefix_code', models.CharField(blank=True, max_length=12, null=True, verbose_name='Префикс в 1С')),
                ('accounting_annuity', models.CharField(blank=True, max_length=20, null=True, verbose_name='Код 1С Аннуитетный')),
                ('accounting_equal_instalments', models.CharField(blank=True, max_length=20, null=True, verbose_name='Код 1С Дифференцированный')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активен')),
                ('financing_purpose', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='credits.fundingpurpose', verbose_name='Цель финансирования')),
                ('financing_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='credits.financingtype', verbose_name='Вид финансирования')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='core.partner', verbose_name='Партнёр')),
            ],
            options={
                'verbose_name': 'Кредитный продукт',
                'verbose_name_plural': 'Настройки: Кредитные продукты',
            },
        ),
        migrations.CreateModel(
            name='RejectionReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=255, verbose_name='Статус')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
                ('order', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Причина отказа',
                'verbose_name_plural': 'Причины отказа',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='StatusTransition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.CharField(choices=[('NEW', 'Новая'), ('IN_PROGRESS', 'В процессе'), ('IN_WORK', 'В работе'), ('IN_WORK_CREDIT_ADMIN', 'В работе (кред.админ)'), ('TO_SIGNING', 'На подписании'), ('GUARANTOR_SIGNING', 'На подписании гаранта'), ('FIN_ANALYSIS', 'Фин Анализ'), ('DECISION', 'На рассмотрении'), ('DECISION_CHAIRPERSON', 'Ожидает решение (председатель)'), ('FILLING', 'На доработке'), ('VISIT', 'Выезд'), ('CALLBACK', 'Перезвонить'), ('APPROVED', 'Одобрен'), ('REJECTED', 'Отказ'), ('CANCEL', 'Отмена'), ('ISSUANCE', 'Выдача'), ('ISSUED', 'Выдан')], default='NEW', max_length=20, verbose_name='Статус')),
                ('reason', models.CharField(blank=True, max_length=255, null=True, verbose_name='Причина')),
                ('credit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_transitions', to='credits.creditapplication')),
            ],
            options={
                'verbose_name': 'Изменение статуса',
                'verbose_name_plural': 'Изменения статуса',
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='RepaymentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repayment_method', models.CharField(choices=[('ANNUITY', 'Аннуитетный'), ('EQUAL_INSTALMENTS', 'Равными долями')], default='ANNUITY', max_length=20, verbose_name='Метод погашения')),
                ('prefix_contract_code', models.CharField(default='', max_length=5, verbose_name='Префикс для номера договора')),
                ('product_code', models.CharField(max_length=12, verbose_name='Код продукта в 1С')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repayment_methods', to='credits.product')),
            ],
            options={
                'verbose_name': 'Метод погашения',
                'verbose_name_plural': 'Доступные методы погашения',
            },
        ),
    ]
