# Generated by Django 4.2.10 on 2024-11-26 11:02

import apps.people.models
import apps.people.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalContactRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(blank=True, choices=[('SPOUSE', 'Супруг(а)'), ('RELATIVE', 'Родственник'), ('FRIEND', 'Друг/Подруга')], max_length=100, null=True, verbose_name='Тип связи с заёмщиком')),
            ],
            options={
                'verbose_name': 'Дополнительный контакт',
                'verbose_name_plural': 'Дополнительные контакты',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Страна')),
                ('region', models.CharField(blank=True, max_length=255, null=True, verbose_name='Регион')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Город')),
                ('district', models.CharField(blank=True, max_length=255, null=True, verbose_name='Район')),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name='Улица')),
                ('building', models.CharField(blank=True, max_length=100, null=True, verbose_name='Дом / здание')),
                ('corpus', models.CharField(blank=True, max_length=100, null=True, verbose_name='Корпус')),
                ('flat', models.CharField(blank=True, max_length=50, null=True, verbose_name='Квартира')),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iin', models.CharField(max_length=12, unique=True, validators=[apps.people.validators.IinValidator], verbose_name='ИИН')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Мужской'), ('FEMALE', 'Женский')], max_length=16, null=True, verbose_name='Пол')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
            ],
            options={
                'verbose_name': 'Физическое лицо',
                'verbose_name_plural': 'Физические лица',
            },
        ),
        migrations.CreateModel(
            name='PersonContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество')),
                ('mobile_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Мобильный телефон')),
                ('home_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Домашний телефон')),
                ('work_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Рабочий телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
            ],
            options={
                'verbose_name': 'Контактная информация',
                'verbose_name_plural': 'Контактная информация',
            },
        ),
        migrations.CreateModel(
            name='PersonalPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=apps.people.models.personal_photo_path, verbose_name='Файл с изображением')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='people.person')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество')),
                ('marital_status', models.CharField(blank=True, choices=[('MARRIED', 'Женат/замужем'), ('SINGLE', 'Холост/не замужем'), ('DIVORCED', 'Разведен(а)'), ('WIDOW', 'Вдовец/вдова')], max_length=150, null=True, verbose_name='Семейное положение')),
                ('resident', models.BooleanField(default=True, verbose_name='Резидент')),
                ('citizenship', models.CharField(blank=True, max_length=255, null=True, verbose_name='Гражданство')),
                ('document_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Тип документа')),
                ('document_series', models.CharField(blank=True, max_length=100, null=True, verbose_name='Серия документа')),
                ('document_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Номер документа')),
                ('document_issue_date', models.DateField(null=True, verbose_name='Дата выдачи документа')),
                ('document_exp_date', models.DateField(null=True, verbose_name='Срок действия документа')),
                ('document_issue_org', models.CharField(blank=True, max_length=255, null=True, verbose_name='Орган выдачи документа')),
                ('spouse_iin', models.CharField(max_length=12, null=True, validators=[apps.people.validators.IinValidator], verbose_name='ИИН Супруги/а')),
                ('spouse_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО супруги/а')),
                ('spouse_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Телефон супруги/а')),
                ('dependants_child', models.PositiveIntegerField(default=0, verbose_name='Количество детей')),
                ('dependants_additional', models.PositiveIntegerField(default=0, verbose_name='Количество прочих иждивенцев')),
                ('education', models.CharField(blank=True, max_length=255, null=True, verbose_name='Образование')),
                ('job_place', models.CharField(blank=True, max_length=255, null=True, verbose_name='Место работы')),
                ('job_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Должность')),
                ('same_reg_address', models.BooleanField(default=False)),
                ('mobile_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Мобильный телефон')),
                ('home_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Домашний телефон')),
                ('work_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Рабочий телефон')),
                ('loan_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Сумма займа')),
                ('bank_account_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер счета')),
                ('organization', models.CharField(blank=True, max_length=255, null=True, verbose_name='Организация')),
                ('position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Должность')),
                ('additional_income', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Дополнительный доход')),
                ('job_experience', models.PositiveIntegerField(blank=True, null=True, verbose_name='Стаж работы на тек. месте, мес')),
                ('total_job_experience', models.PositiveIntegerField(blank=True, null=True, verbose_name='Общий стаж работы, мес')),
                ('has_overdue_loans', models.BooleanField(blank=True, null=True, verbose_name='Есть ли задолженность более 60 дней')),
                ('additional_contacts', models.ManyToManyField(blank=True, through='people.AdditionalContactRelation', to='people.personcontact', verbose_name='Дополнительные контакты')),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.bank')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='records', to='people.person', verbose_name='Физическое лицо')),
                ('real_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_real_related', to='people.address', verbose_name='Фактический адрес проживания')),
                ('reg_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_reg_related', to='people.address', verbose_name='Адрес регистрации')),
            ],
            options={
                'verbose_name': 'Запись',
                'verbose_name_plural': 'Записи',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='DocumentPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=apps.people.models.document_photo_path, verbose_name='Файл с изображением')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_photos', to='people.person')),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер счета')),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.bank', verbose_name='Наименование банка')),
                ('record', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bank_account', to='people.personaldata')),
            ],
        ),
        migrations.AddField(
            model_name='additionalcontactrelation',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='people.personcontact'),
        ),
        migrations.AddField(
            model_name='additionalcontactrelation',
            name='profile_record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='additional_contact_relation', to='accounts.profilepersonalrecord'),
        ),
        migrations.AddField(
            model_name='additionalcontactrelation',
            name='record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='additional_contact_relation', to='people.personaldata'),
        ),
    ]
