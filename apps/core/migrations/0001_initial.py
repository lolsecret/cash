# Generated by Django 4.2.10 on 2024-11-26 11:02

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import mptt.fields
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('bic', models.CharField(max_length=255, null=True, verbose_name='Bank Identifier Code')),
            ],
            options={
                'verbose_name': 'Банк',
                'verbose_name_plural': 'Банки Казахстана',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('code', models.CharField(blank=True, help_text='Код из системы доставки MyKhat', max_length=20, verbose_name='Код')),
                ('branch_code', models.CharField(help_text='Код филиала используется для формирования номера договора для рассрочки', max_length=2, null=True, verbose_name='Код филиала')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=255, verbose_name='Наименование')),
                ('document', models.FileField(upload_to='manager_documents/', verbose_name='Файл')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('question', models.CharField(max_length=255, verbose_name='Вопрос')),
                ('answer', tinymce.models.HTMLField(verbose_name='Ответ')),
                ('sort', models.SmallIntegerField()),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQ',
            },
        ),
        migrations.CreateModel(
            name='NotificationText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('code', models.CharField(blank=True, max_length=25, null=True, verbose_name='Код уведомления')),
                ('error_field', models.CharField(blank=True, max_length=25, null=True, verbose_name='Короткое название поля ошибки')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Описание уведомления')),
                ('type', models.CharField(choices=[('CRM', 'CRM система'), ('MFO_WEBSITE', 'Сайт МФО')], max_length=25, verbose_name='Тип уведомления')),
            ],
            options={
                'verbose_name': 'Текст уведомлений',
                'verbose_name_plural': 'Настройки: Текста уведомлений',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Партнёр',
                'verbose_name_plural': 'Партнёры',
            },
        ),
        migrations.CreateModel(
            name='PrintForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.SlugField(allow_unicode=True, help_text='Путь который будет добавляться в конце url: /print/{uuid}/{путь}', unique=True, verbose_name='Путь')),
                ('template', models.TextField(verbose_name='Шаблон')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Печатная форма',
                'verbose_name_plural': 'Печатные формы',
            },
        ),
        migrations.CreateModel(
            name='CreditIssuancePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issuance_plan', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='План выдачи')),
                ('year', models.PositiveSmallIntegerField(verbose_name='Год')),
                ('month', models.PositiveSmallIntegerField(verbose_name='Месяц')),
            ],
            options={
                'verbose_name': 'План выдачи на месяц',
                'verbose_name_plural': 'Настройки: План выдачи на месяц',
                'ordering': ('year', 'month'),
                'unique_together': {('year', 'month')},
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('index', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.branch', verbose_name='Родительский элемент')),
            ],
            options={
                'verbose_name': 'Филиал',
                'verbose_name_plural': 'Филиалы',
            },
        ),
    ]
