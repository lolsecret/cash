# Generated by Django 4.2.10 on 2024-11-26 11:02

import apps.accounts.models
import apps.people.validators
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import django_extensions.db.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('is_registered', models.BooleanField(default=False, verbose_name='Зарегистрирован')),
            ],
            options={
                'verbose_name': 'Пользователь ЛК',
                'verbose_name_plural': 'Пользователи ЛК',
            },
        ),
        migrations.CreateModel(
            name='ProfilePersonalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество')),
                ('bank_account_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер счета')),
                ('selfie', models.ImageField(blank=True, null=True, upload_to=apps.accounts.models.profile_selfie_path, verbose_name='Селфи пользователя ЛК')),
                ('id_document_pdf', models.FileField(blank=True, help_text='Фото документа в pdf', null=True, upload_to=apps.accounts.models.profile_selfie_path, verbose_name='Фото документа')),
                ('document_photo', models.ImageField(blank=True, null=True, upload_to=apps.accounts.models.profile_selfie_path, verbose_name='Файл с изображением документа')),
                ('validated', models.BooleanField(null=True, verbose_name='Прошел валидацию')),
                ('similarity', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='коэффициент сходства')),
                ('attempts', models.PositiveSmallIntegerField(default=0, null=True, verbose_name='Кол-во попыток')),
                ('marital_status', models.CharField(blank=True, choices=[('MARRIED', 'Женат/замужем'), ('SINGLE', 'Холост/не замужем'), ('DIVORCED', 'Разведен(а)'), ('WIDOW', 'Вдовец/вдова')], max_length=150, null=True, verbose_name='Семейное положение')),
                ('resident', models.BooleanField(default=True, verbose_name='Резидент')),
                ('citizenship', models.CharField(blank=True, max_length=255, null=True, verbose_name='Гражданство')),
                ('document_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Тип документа')),
                ('document_series', models.CharField(blank=True, max_length=100, null=True, verbose_name='Серия документа')),
                ('document_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Номер документа')),
                ('document_issue_date', models.DateField(null=True, verbose_name='Дата выдачи документа')),
                ('document_exp_date', models.DateField(null=True, verbose_name='Срок действия документа')),
                ('document_issue_org', models.CharField(blank=True, max_length=255, null=True, verbose_name='Орган выдачи документа')),
                ('spouse_iin', models.CharField(max_length=12, null=True, validators=[apps.people.validators.IinValidator], verbose_name='ИИН Супруги/а')),
                ('spouse_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО супруги/а')),
                ('spouse_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Телефон супруги/а')),
                ('dependants_child', models.PositiveIntegerField(default=0, verbose_name='Количество иждивенцев')),
                ('dependants_additional', models.PositiveIntegerField(default=0, verbose_name='Количество прочих иждивенцев')),
                ('education', models.CharField(blank=True, max_length=255, null=True, verbose_name='Образование')),
                ('job_place', models.CharField(blank=True, max_length=255, null=True, verbose_name='Место работы')),
                ('job_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Должность')),
                ('same_reg_address', models.BooleanField(default=False)),
                ('mobile_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Мобильный телефон')),
                ('home_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Домашний телефон')),
                ('work_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Рабочий телефон')),
                ('loan_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Сумма займа')),
                ('organization', models.CharField(blank=True, max_length=255, null=True, verbose_name='Организация')),
                ('position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Должность')),
                ('additional_income', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Дополнительный доход')),
                ('job_experience', models.PositiveIntegerField(blank=True, null=True, verbose_name='Стаж работы на тек. месте, мес')),
                ('total_job_experience', models.PositiveIntegerField(blank=True, null=True, verbose_name='Общий стаж работы, мес')),
                ('has_overdue_loans', models.BooleanField(default=False, verbose_name='Есть ли задолженность более 60 дней')),
            ],
            options={
                'verbose_name': 'Регистрационные данные',
                'verbose_name_plural': 'Регистрационные данные пользователей ЛК',
                'ordering': ('-created',),
            },
        ),
    ]
